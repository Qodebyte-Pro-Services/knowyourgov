<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KnowYourGovNow - Comments</title>
     <link rel="icon" type="image/png" sizes="56x56" href="/images/top.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --dark-color: #1a1a2e;
            --light-color: #f8f9fa;
            --success-color: #4cc9f0;
            --warning-color: #f8961e;
            --danger-color: #f94144;
            --sidebar-width: 250px;
            --header-height: 60px;
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fb;
            color: #333;
            overflow-x: hidden;
        }

        .dashboard {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background: var(--dark-color);
            color: white;
            position: fixed;
            height: 100vh;
            transition: var(--transition);
            z-index: 100;
        }

        .sidebar-header {
            padding: 1rem;
            height: var(--header-height);
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar-header h3 {
            font-size: 1.2rem;
            color: white;
        }

        .sidebar-menu {
            padding: 1rem 0;
        }

        .sidebar-menu li {
            list-style: none;
            margin-bottom: 0.5rem;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 0.8rem 1.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: var(--transition);
        }

        .sidebar-menu a:hover {
            background: rgba(255, 255, 255, 0.1);
            color: white;
        }

        .sidebar-menu a.active {
            background: var(--primary-color);
            color: white;
        }

        .sidebar-menu i {
            margin-right: 0.8rem;
            font-size: 1.1rem;
        }

        .sidebar-menu span {
            font-size: 0.9rem;
        }

        .sidebar-collapse {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            transition: var(--transition);
        }

        /* Header Styles */
        .header {
            height: var(--header-height);
            background: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1.5rem;
            position: sticky;
            top: 0;
            z-index: 90;
        }

        .header-left {
            display: flex;
            align-items: center;
        }

        .toast-custom {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 9999;
  min-width: 250px;
  max-width: 350px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  overflow: hidden;
  transform: translateX(0);
  opacity: 1;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  padding: 0;
  border: none;
}

/* Toast when hiding */
.toast-custom.hide {
  transform: translateX(100%);
  opacity: 0;
}

/* Toast Body */
.toast-custom-body {
  padding: 16px;
  flex-grow: 1;
  color: white;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  font-size: 14px;
  line-height: 1.5;
}

/* Close Button */
.toast-custom-close {
  background: transparent;
  border: none;
  color: white;
  opacity: 0.8;
  padding: 16px;
  cursor: pointer;
  transition: opacity 0.2s;
  display: flex;
  align-items: center;
}

.toast-custom-close:hover {
  opacity: 1;
}

/* Success Variant */
.toast-custom.success {
  background: #28a745;
}

/* Error Variant */
.toast-custom.error {
  background: #dc3545;
}

/* Warning Variant */
.toast-custom.warning {
  background: #ffc107;
  color: #212529;
}

.toast-custom.warning .toast-custom-body,
.toast-custom.warning .toast-custom-close {
  color: #212529;
}

/* Info Variant */
.toast-custom.info {
  background: #17a2b8;
}

/* Animation */
@keyframes slideIn {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

        .toggle-sidebar {
            background: none;
            border: none;
            font-size: 1.2rem;
            color: var(--dark-color);
            cursor: pointer;
            margin-right: 1rem;
            display: none;
        }

        .search-bar {
            position: relative;
        }

        .search-bar input {
            padding: 0.5rem 1rem 0.5rem 2.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 250px;
            transition: var(--transition);
        }

        .search-bar input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .search-bar i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #777;
        }

        .header-right {
            display: flex;
            align-items: center;
        }

        .notification, .user-profile {
            position: relative;
            margin-left: 1.5rem;
            cursor: pointer;
        }

        .notification i, .user-profile i {
            font-size: 1.2rem;
            color: #555;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: var(--danger-color);
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.6rem;
            font-weight: bold;
        }

        .user-profile img {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            object-fit: cover;
        }

        /* Content Area Styles */
        .content {
            padding: 1.5rem;
        }

        .page-title {
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .page-title h2 {
            font-size: 1.5rem;
            color: var(--dark-color);
        }

        .btn {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 4px;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background: var(--secondary-color);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
        }

        /* Comments Table */
        .comments-section {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th, .table td {
            padding: 0.8rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .table th {
            font-weight: 600;
            color: #555;
            font-size: 0.9rem;
        }

        .table tr:hover {
            background: #f9f9f9;
        }

        .comment-preview {
            max-width: 300px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .status-badge {
            display: inline-block;
            padding: 0.3rem 0.6rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .status-published {
            background: rgba(76, 175, 80, 0.1);
            color: #4caf50;
        }

        .status-pending {
            background: rgba(33, 150, 243, 0.1);
            color: #2196f3;
        }

        .status-spam {
            background: rgba(249, 65, 68, 0.1);
            color: var(--danger-color);
        }

        .action-btn {
            background: none;
            border: none;
            color: #777;
            cursor: pointer;
            margin-right: 0.5rem;
            font-size: 1rem;
            transition: var(--transition);
        }

        .action-btn:hover {
            color: var(--primary-color);
        }

        .reply-count {
            display: inline-block;
            padding: 0.2rem 0.5rem;
            background: rgba(67, 97, 238, 0.1);
            color: var(--primary-color);
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 500;
        }

        /* Comment Filters */
        .comment-filters {
            display: flex;
            margin-bottom: 1.5rem;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 0.5rem 1rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            background: white;
            cursor: pointer;
            transition: var(--transition);
        }

        .filter-btn:hover, .filter-btn.active {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        /* Responsive Styles */
        @media (max-width: 1200px) {
            .sidebar {
                width: 70px;
                overflow: hidden;
            }

            .sidebar-header h3, .sidebar-menu span {
                display: none;
            }

            .sidebar-menu a {
                justify-content: center;
                padding: 0.8rem;
            }

            .sidebar-menu i {
                margin-right: 0;
                font-size: 1.3rem;
            }

            .main-content {
                margin-left: 70px;
            }
        }

        @media (max-width: 992px) {
            .table-responsive {
                overflow-x: auto;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                left: -100%;
            }

            .sidebar.active {
                left: 0;
            }

            .main-content {
                margin-left: 0;
            }

            .toggle-sidebar {
                display: block;
            }

            .search-bar input {
                width: 180px;
            }

            .comment-filters {
                flex-direction: column;
            }
        }

        @media (max-width: 576px) {
            .header {
                padding: 0 1rem;
            }

            .search-bar input {
                width: 120px;
                padding-left: 2rem;
            }

            .content {
                padding: 1rem;
            }

            .page-title {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>KnowYourGovNow</h3>
                <button class="sidebar-collapse">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <ul class="sidebar-menu">
                <li>
                    <a href="/Admin/dashboard">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/posts">
                        <i class="fas fa-newspaper"></i>
                        <span>Posts</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/categories-tags">
                        <i class="fas fa-tags"></i>
                        <span>Categories & Tags</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/comments" class="active">
                        <i class="fas fa-comments"></i>
                        <span>Comments</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/settings">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/support">
                        <i class="fas fa-question-circle"></i>
                        <span>Support</span>
                    </a>
                </li>

                  <li>
    <a href="/logout">
        <i class="fas fa-sign-out-alt"></i>
        <span>Log Out</span>
    </a>
</li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <header class="header">
                <div class="header-left">
                    <button class="toggle-sidebar">
                        <i class="fas fa-bars"></i>
                    </button>
                   <div hidden class="search-bar">
                        <i class="fas fa-search"></i>
                        <input type="text" placeholder="Search...">
                    </div>
                </div>
                <div class="header-right">
                    <div hidden class="notification">
                        <i class="fas fa-bell"></i>
                        <span class="notification-badge">3</span>
                    </div>
                    <div class="user-profile">
                        <img src="/images/add-image.png" alt="User">
                    </div>
                </div>
            </header>

            <!-- Content Area -->
            <div class="content">
                <div class="page-title">
                    <h2>Comments Management</h2>
                    <a href="/Admin/commenters" class="btn btn-secondary">
                        <i class="fas fa-users"></i> View Commenters
                    </a>
                </div>

                <!-- Comment Filters -->
                <div class="comment-filters">
                    <button class="filter-btn active">All Comments ()</button>
                    <button class="filter-btn">With Replies ()</button>
                </div>

                <!-- Comments Table -->
                <div class="comments-section">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Post Title</th>
                                    <th>Comment</th>
                                    <th>Commenter</th>
                                    <th>Email</th>
                                    <th>Replies</th>
                                    <th>In Reply To</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>How to Build a Responsive Dashboard</td>
                                    <td class="comment-preview" title="This is really helpful! I implemented it in my project and it works great.">This is really helpful! I implemented it in my project and it works great.</td>
                                    <td>John Doe</td>
                                    <td>john@example.com</td>
                                    <td><span class="reply-count">3 replies</span></td>
                                    <td>-</td>
                                    <td>
                                        <button class="action-btn" title="View Thread"><i class="fas fa-comments"></i></button>
                                        <button class="action-btn" title="Delete"><i class="fas fa-trash"></i></button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>10 Tips for Better Blog Writing</td>
                                    <td class="comment-preview" title="I disagree with point #5. In my experience...">I disagree with point #5. In my experience...</td>
                                    <td>Sarah Smith</td>
                                    <td>sarah@example.com</td>
                                    <td><span class="reply-count">1 reply</span></td>
                                    <td>-</td>
                                    <td>
                                        <button class="action-btn" title="View Thread"><i class="fas fa-comments"></i></button>
                                        <button class="action-btn" title="Delete"><i class="fas fa-trash"></i></button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>SEO Best Practices for 2023</td>
                                    <td class="comment-preview" title="Great article! Very comprehensive.">Great article! Very comprehensive.</td>
                                    <td>Mike Johnson</td>
                                    <td>mike@example.com</td>
                                    <td>-</td>
                                    <td>John Doe</td>
                                 
                                    <td>
                                         <button class="action-btn" title="View Thread"><i class="fas fa-comments"></i></button>
                                        <button class="action-btn" title="Delete"><i class="fas fa-trash"></i></button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>How to Build a Responsive Dashboard</td>
                                    <td class="comment-preview" title="Can you provide more examples for mobile layouts?">Can you provide more examples for mobile layouts?</td>
                                    <td>Emily Davis</td>
                                    <td>emily@example.com</td>
                                    <td>-</td>
                                    <td>-</td>
                                    <td>
                                        <button class="action-btn" title="View Thread"><i class="fas fa-comments"></i></button>
                                        <button class="action-btn" title="Delete"><i class="fas fa-trash"></i></button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>10 Tips for Better Blog Writing</td>
                                    <td class="comment-preview" title="Buy cheap pills at discountpills.com">Buy cheap pills at discountpills.com</td>
                                    <td>Spammer</td>
                                    <td>spam@example.com</td>
                                    <td>-</td>
                                    <td>-</td>
                                    <td>
  <button class="action-btn" title="View Thread"><i class="fas fa-comments"></i></button>
                                        <button class="action-btn" title="Delete"><i class="fas fa-trash"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="commentThreadModal" class="modal" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(0,0,0,0.4); z-index:999; align-items:center; justify-content:center;">
  <div class="modal-content" style="background:#fff; border-radius:8px; max-width:500px; width:90%; margin:auto; padding:2rem; position:relative;">
    <span id="closeThreadModal" style="position:absolute; top:10px; right:20px; font-size:1.5rem; cursor:pointer;">&times;</span>
    <h3>Comment Thread</h3>
    <div id="commentThreadContent">
     
    </div>
  </div>
</div>
    <script>
        // Toggle sidebar on mobile
        document.querySelector('.toggle-sidebar').addEventListener('click', function() {
            document.querySelector('.sidebar').classList.toggle('active');
        });

        // Close sidebar when clicking the collapse button
        document.querySelector('.sidebar-collapse').addEventListener('click', function() {
            document.querySelector('.sidebar').classList.remove('active');
        });

        // Filter buttons functionality
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                // Here you would typically filter the comments table
                // For this example, we're just toggling the active class
            });
        });

        // Responsive sidebar behavior
        function handleSidebar() {
            const sidebar = document.querySelector('.sidebar');
            const screenWidth = window.innerWidth;
            
            if (screenWidth <= 768) {
                sidebar.classList.remove('active');
            } else {
                sidebar.classList.add('active');
            }
        }

        // Run on load and resize
        window.addEventListener('load', handleSidebar);
        window.addEventListener('resize', handleSidebar);
    </script>

    <script>
    // Sample thread data (replace with dynamic data from your backend)
    const sampleThread = [
        {
            author: "John Doe",
            comment: "This is the main comment.",
            replies: [
                {
                    author: "Sarah Smith",
                    comment: "I agree with you!",
                    replies: [
                        {
                            author: "Mike Johnson",
                            comment: "Me too!",
                            replies: []
                        }
                    ]
                },
                {
                    author: "Emily Davis",
                    comment: "Can you elaborate?",
                    replies: []
                }
            ]
        }
    ];

    // Recursive function to render thread as HTML
    function renderThread(thread) {
        let html = '<ul style="list-style:none; padding-left:0; margin-top:1rem;">';
        thread.forEach(node => {
            html += `<li style="margin-bottom:1rem; display: flex; flex-direction: column; gap: 10px;">
                <div style="background:#f5f7fb; padding:0.7rem 1rem; border-radius:6px;">
                    <strong>${node.author}:</strong> ${node.comment}
                </div>`;
            if (node.replies && node.replies.length > 0) {
                html += renderThread(node.replies);
            }
            html += '</li>';
        });
        html += '</ul>';
        return html;
    }

    // Open modal and inject thread
    document.querySelectorAll('.action-btn[title="View Thread"]').forEach(btn => {
        btn.addEventListener('click', function() {
            document.getElementById('commentThreadContent').innerHTML = renderThread(sampleThread);
            document.getElementById('commentThreadModal').style.display = 'flex';
        });
    });

    // Close modal
    document.getElementById('closeThreadModal').onclick = function() {
        document.getElementById('commentThreadModal').style.display = 'none';
    };

    // Optional: Close modal when clicking outside content
    document.getElementById('commentThreadModal').onclick = function(e) {
        if (e.target === this) {
            this.style.display = 'none';
        }
    };
</script>
  <script>
function showToast(message, type = "success") {
  const toast = document.createElement("div");
  toast.className = `toast-custom ${type}`;
  
  toast.innerHTML = `
    <div class="toast-custom-body">${message}</div>
    <button class="toast-custom-close" aria-label="Close">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </button>
  `;

  document.body.appendChild(toast);

  setTimeout(() => {
    toast.style.animation = "slideIn 0.3s forwards";
  }, 10);

  
  const removeToast = () => {
    toast.classList.add('hide');
    setTimeout(() => toast.remove(), 300);
  };

  
  const timeoutId = setTimeout(removeToast, 3500);


  toast.querySelector('.toast-custom-close').onclick = () => {
    clearTimeout(timeoutId);
    removeToast();
  };
}
</script>


<script>
let currentPage = 1;
const perPage = 10;
let totalPages = 1;
let filterMode = 'all'; // 'all' or 'withReplies'
let allComments = [];

function fetchComments(page = 1) {
    fetch(`/comments?page=${page}&limit=${perPage}`)
        .then(res => res.json())
        .then(data => {
            allComments = data.comments;
            totalPages = Math.ceil(data.total / data.limit);
            renderComments();
            renderPagination(data.page, totalPages);
            updateFilterCounts(data.total);
        });
}

function renderComments() {
    const tbody = document.querySelector('.table tbody');
    let comments = allComments;
    if (filterMode === 'withReplies') {
        comments = comments.filter(c => c.reply_count && c.reply_count > 0);
    }
    tbody.innerHTML = '';
    comments.forEach(c => {
        tbody.innerHTML += `
            <tr>
                <td>${c.post_title || '-'}</td>
                <td class="comment-preview" title="${c.comment}">${c.comment.length > 60 ? c.comment.substring(0, 57) + '...' : c.comment}</td>
                <td>${c.commenter}</td>
                <td>${c.email}</td>
                <td>${c.reply_count && c.reply_count > 0 ? `<span class="reply-count">${c.reply_count} repl${c.reply_count > 1 ? 'ies' : 'y'}</span>` : '-'}</td>
                <td>${c.in_reply_to && c.in_reply_to !== 'no' ? c.in_reply_to : '-'}</td>
                <td>
                    <button class="action-btn" title="View Thread" data-id="${c.id}"><i class="fas fa-comments"></i></button>
                    <button class="action-btn" title="Delete" data-id="${c.id}"><i class="fas fa-trash"></i></button>
                </td>
            </tr>
        `;
    });
    addCommentTableListeners();
}

function renderPagination(page, total) {
    let html = '';
    if (total > 1) {
        html += `<nav class="pagination-nav"><ul class="pagination">`;
        for (let i = 1; i <= total; i++) {
            html += `<li class="page-item${i === page ? ' active' : ''}">
                <a href="#" class="page-link" data-page="${i}">${i}</a>
            </li>`;
        }
        html += `</ul></nav>`;
    }
    let pagDiv = document.getElementById('pagination');
    if (!pagDiv) {
        pagDiv = document.createElement('div');
        pagDiv.id = 'pagination';
        document.querySelector('.comments-section').appendChild(pagDiv);
    }
    pagDiv.innerHTML = html;
    pagDiv.querySelectorAll('.page-link').forEach(link => {
        link.onclick = function(e) {
            e.preventDefault();
            const page = parseInt(this.dataset.page, 10);
            if (page !== currentPage) {
                currentPage = page;
                fetchComments(page);
            }
        };
    });
}

function updateFilterCounts(total) {
    // Optionally update filter button counts
    document.querySelectorAll('.filter-btn')[0].textContent = `All Comments (${total})`;
    document.querySelectorAll('.filter-btn')[1].textContent = `With Replies (${allComments.filter(c => c.reply_count > 0).length})`;
}

function addCommentTableListeners() {
    // View Thread
    document.querySelectorAll('.action-btn[title="View Thread"]').forEach(btn => {
        btn.onclick = function() {
            const commentId = this.getAttribute('data-id');
            openThreadModal(commentId);
        };
    });
    // Delete
    document.querySelectorAll('.action-btn[title="Delete"]').forEach(btn => {
        btn.onclick = async function() {
            const commentId = this.getAttribute('data-id');
            if (confirm('Delete this comment?')) {
                const res = await fetch(`/comment/${commentId}`, { method: 'DELETE' });
                if (res.ok) {
                    showToast('Comment deleted.', 'success');
                    fetchComments(currentPage);
                } else {
                    showToast('Failed to delete comment.', 'error');
                }
            }
        };
    });
}

// Filtering
document.querySelectorAll('.filter-btn').forEach((btn, idx) => {
    btn.onclick = function() {
        document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        filterMode = idx === 1 ? 'withReplies' : 'all';
        renderComments();
    };
});

function openThreadModal(commentId) {
    fetch(`/comment/${commentId}`)
        .then(res => res.json())
        .then(mainComment => {
            fetch(`/comment_thread/${commentId}`)
                .then(res => res.json())
                .then(threadsData => {
                    const thread = [{
                        author: mainComment.commenter,
                        comment: mainComment.comment,
                        replies: (threadsData.threads || []).map(t => ({
                            author: t.thread_commenter || 'Anonymous',
                            comment: t.thread_comment,
                            replies: []
                        }))
                    }];
                    document.getElementById('commentThreadContent').innerHTML = renderThread(thread);
                    document.getElementById('commentThreadModal').style.display = 'flex';
                });
        });
}
function renderThread(thread) {
    let html = '<ul style="list-style:none; padding-left:0; margin-top:1rem;">';
    thread.forEach(node => {
        html += `<li style="margin-bottom:1rem; display: flex; flex-direction: column; gap: 10px;">
            <div style="background:#f5f7fb; padding:0.7rem 1rem; border-radius:6px;">
                <strong>${node.author}:</strong> ${node.comment}
            </div>`;
        if (node.replies && node.replies.length > 0) {
            html += renderThread(node.replies);
        }
        html += '</li>';
    });
    html += '</ul>';
    return html;
}

// Modal close logic
document.getElementById('closeThreadModal').onclick = function() {
    document.getElementById('commentThreadModal').style.display = 'none';
};
document.getElementById('commentThreadModal').onclick = function(e) {
    if (e.target === this) this.style.display = 'none';
};


fetchComments();
</script>
</body>
</html>