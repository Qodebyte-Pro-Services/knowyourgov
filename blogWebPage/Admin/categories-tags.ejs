<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Categories & Tags | KnowYourGovNow</title>
     <link rel="icon" type="image/png" sizes="56x56" href="/images/top.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --dark-color: #1a1a2e;
            --light-color: #f8f9fa;
            --success-color: #4cc9f0;
            --warning-color: #f8961e;
            --danger-color: #f94144;
            --sidebar-width: 250px;
            --header-height: 60px;
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fb;
            color: #333;
            overflow-x: hidden;
        }

        .toast-custom {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 9999;
  min-width: 250px;
  max-width: 350px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  overflow: hidden;
  transform: translateX(0);
  opacity: 1;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  padding: 0;
  border: none;
}

/* Toast when hiding */
.toast-custom.hide {
  transform: translateX(100%);
  opacity: 0;
}

/* Toast Body */
.toast-custom-body {
  padding: 16px;
  flex-grow: 1;
  color: white;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  font-size: 14px;
  line-height: 1.5;
}

/* Close Button */
.toast-custom-close {
  background: transparent;
  border: none;
  color: white;
  opacity: 0.8;
  padding: 16px;
  cursor: pointer;
  transition: opacity 0.2s;
  display: flex;
  align-items: center;
}

.toast-custom-close:hover {
  opacity: 1;
}

/* Success Variant */
.toast-custom.success {
  background: #28a745;
}

/* Error Variant */
.toast-custom.error {
  background: #dc3545;
}

/* Warning Variant */
.toast-custom.warning {
  background: #ffc107;
  color: #212529;
}

.toast-custom.warning .toast-custom-body,
.toast-custom.warning .toast-custom-close {
  color: #212529;
}

/* Info Variant */
.toast-custom.info {
  background: #17a2b8;
}

/* Animation */
@keyframes slideIn {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

        .dashboard {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background: var(--dark-color);
            color: white;
            position: fixed;
            height: 100vh;
            transition: var(--transition);
            z-index: 100;
        }

        .sidebar-header {
            padding: 1rem;
            height: var(--header-height);
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar-header h3 {
            font-size: 1.2rem;
            color: white;
        }

        .sidebar-menu {
            padding: 1rem 0;
        }

        .sidebar-menu li {
            list-style: none;
            margin-bottom: 0.5rem;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 0.8rem 1.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: var(--transition);
        }

        .sidebar-menu a:hover {
            background: rgba(255, 255, 255, 0.1);
            color: white;
        }

        .sidebar-menu a.active {
            background: var(--primary-color);
            color: white;
        }

        .sidebar-menu i {
            margin-right: 0.8rem;
            font-size: 1.1rem;
        }

        .sidebar-menu span {
            font-size: 0.9rem;
        }

        .sidebar-collapse {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            transition: var(--transition);
        }

        /* Header Styles */
        .header {
            height: var(--header-height);
            background: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1.5rem;
            position: sticky;
            top: 0;
            z-index: 90;
        }

        .header-left {
            display: flex;
            align-items: center;
        }

        .toggle-sidebar {
            background: none;
            border: none;
            font-size: 1.2rem;
            color: var(--dark-color);
            cursor: pointer;
            margin-right: 1rem;
            display: none;
        }

        .search-bar {
            position: relative;
        }

        .search-bar input {
            padding: 0.5rem 1rem 0.5rem 2.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 250px;
            transition: var(--transition);
        }

        .search-bar input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .search-bar i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #777;
        }

        .header-right {
            display: flex;
            align-items: center;
        }

        .notification, .user-profile {
            position: relative;
            margin-left: 1.5rem;
            cursor: pointer;
        }

        .notification i, .user-profile i {
            font-size: 1.2rem;
            color: #555;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: var(--danger-color);
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.6rem;
            font-weight: bold;
        }

        .user-profile img {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            object-fit: cover;
        }

        /* Content Area Styles */
        .content {
            padding: 1.5rem;
        }

        .page-title {
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .page-title h2 {
            font-size: 1.5rem;
            color: var(--dark-color);
        }

        .btn {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 4px;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background: var(--secondary-color);
        }

        .btn-success {
            background: var(--success-color);
            color: white;
        }

        .btn-success:hover {
            background: #00b4d8;
        }

        .btn-danger {
            background: var(--danger-color);
            color: white;
        }

        .btn-danger:hover {
            background: #d32f2f;
        }

        /* Tables */
        .management-table {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }

        .management-table h3 {
            font-size: 1.2rem;
            color: var(--dark-color);
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th, .table td {
            padding: 0.8rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .table th {
            font-weight: 600;
            color: #555;
            font-size: 0.9rem;
        }

        .table tr:hover {
            background: #f9f9f9;
        }

        .action-btn {
            background: none;
            border: none;
            color: #777;
            cursor: pointer;
            margin-right: 0.5rem;
            font-size: 1rem;
            transition: var(--transition);
        }

        .action-btn:hover {
            color: var(--primary-color);
        }

        .action-btn.delete:hover {
            color: var(--danger-color);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: var(--transition);
        }

        .modal.active {
            display: flex;
            opacity: 1;
        }

        .modal-content {
            background: white;
            border-radius: 8px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
            width: 90%;
            max-width: 500px;
            max-height: 90vh;
            overflow-y: auto;
            transform: translateY(-20px);
            transition: var(--transition);
        }

        .modal.active .modal-content {
            transform: translateY(0);
        }

        .modal-header {
            padding: 1.5rem;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .modal-header h3 {
            font-size: 1.3rem;
            color: var(--dark-color);
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #777;
            cursor: pointer;
            transition: var(--transition);
        }

        .modal-close:hover {
            color: var(--danger-color);
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            padding: 1rem 1.5rem;
            border-top: 1px solid #eee;
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            color: #555;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.8rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);
        }

        /* Responsive Styles */
        @media (max-width: 1200px) {
            .sidebar {
                width: 70px;
                overflow: hidden;
            }

            .sidebar-header h3, .sidebar-menu span {
                display: none;
            }

            .sidebar-menu a {
                justify-content: center;
                padding: 0.8rem;
            }

            .sidebar-menu i {
                margin-right: 0;
                font-size: 1.3rem;
            }

            .main-content {
                margin-left: 70px;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                left: -100%;
            }

            .sidebar.active {
                left: 0;
            }

            .main-content {
                margin-left: 0;
            }

            .toggle-sidebar {
                display: block;
            }

            .search-bar input {
                width: 180px;
            }

            .modal-content {
                width: 95%;
            }
        }

        @media (max-width: 576px) {
            .header {
                padding: 0 1rem;
            }

            .search-bar input {
                width: 120px;
                padding-left: 2rem;
            }

            .content {
                padding: 1rem;
            }

            .modal-footer {
                flex-direction: column;
            }

            .modal-footer .btn {
                width: 100%;
            }

            .table {
                display: block;
                overflow-x: auto;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>KnowYourGovNow</h3>
                <button class="sidebar-collapse">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <ul class="sidebar-menu">
                <li>
                    <a href="/Admin/dashboard">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/posts">
                        <i class="fas fa-newspaper"></i>
                        <span>Posts</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/categories-tags" class="active">
                        <i class="fas fa-tags"></i>
                        <span>Categories & Tags</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/settings">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li>
                    <a href="/Admin/comments">
                        <i class="fas fa-comments"></i>
                        <span>Comments</span>                  
                    </a>
                </li>
                <li>
                    <a href="/Admin/support">
                        <i class="fas fa-question-circle"></i>
                        <span>Support</span>
                    </a>
                </li>

                <li>
    <a href="/logout">
        <i class="fas fa-sign-out-alt"></i>
        <span>Log Out</span>
    </a>
</li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <header class="header">
                <div class="header-left">
                    <button class="toggle-sidebar">
                        <i class="fas fa-bars"></i>
                    </button>
                   <div hidden class="search-bar">
                        <i class="fas fa-search"></i>
                        <input type="text" placeholder="Search...">
                    </div>
                </div>
                <div class="header-right">
                    <div hidden class="notification">
                        <i class="fas fa-bell"></i>
                        <span class="notification-badge">3</span>
                    </div>
                    <div class="user-profile">
                        <img src="/images/add-image.png" alt="User">
                    </div>
                </div>
            </header>

            <!-- Content Area -->
            <div class="content">
                <div class="page-title">
                    <h2>Categories & Tags</h2>
                </div>

                <!-- Categories Table -->
                <div class="management-table">
                    <h3>
                        Categories
                        <button class="btn btn-primary" id="addCategoryBtn">
                            <i class="fas fa-plus"></i> Add Category
                        </button>
                    </h3>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Slug</th>
                                <th>Posts</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody class="categories-tbody">
                            <tr>
                                <td>Web Design</td>
                                <td>web-design</td>
                                <td>24</td>
                                <td>
                                    <button class="action-btn edit-category" data-id="1" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-category" data-id="1" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>Development</td>
                                <td>development</td>
                                <td>56</td>
                                <td>
                                    <button class="action-btn edit-category" data-id="2" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-category" data-id="2" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>SEO</td>
                                <td>seo</td>
                                <td>18</td>
                                <td>
                                    <button class="action-btn edit-category" data-id="3" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-category" data-id="3" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>Marketing</td>
                                <td>marketing</td>
                                <td>32</td>
                                <td>
                                    <button class="action-btn edit-category" data-id="4" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-category" data-id="4" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!-- Tags Table -->
                <div class="management-table">
                    <h3>
                        Tags
                        <button class="btn btn-primary" id="addTagBtn">
                            <i class="fas fa-plus"></i> Add Tag
                        </button>
                    </h3>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Slug</th>
                                <th>Posts</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody class="tags-tbody">
                            <tr>
                                <td>JavaScript</td>
                                <td>javascript</td>
                                <td>42</td>
                                <td>
                                    <button class="action-btn edit-tag" data-id="1" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-tag" data-id="1" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>React</td>
                                <td>react</td>
                                <td>28</td>
                                <td>
                                    <button class="action-btn edit-tag" data-id="2" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-tag" data-id="2" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>CSS</td>
                                <td>css</td>
                                <td>35</td>
                                <td>
                                    <button class="action-btn edit-tag" data-id="3" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-tag" data-id="3" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>HTML</td>
                                <td>html</td>
                                <td>29</td>
                                <td>
                                    <button class="action-btn edit-tag" data-id="4" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete delete-tag" data-id="4" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

   
    <div class="modal" id="categoryModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="categoryModalTitle">Add New Category</h3>
                <button class="modal-close">&times;</button>
            </div>
            <div class="modal-body">
                <form id="categoryForm">
                    <input type="hidden" id="categoryId">
                    <div class="form-group">
                        <label for="categoryName">Name</label>
                        <input type="text" id="categoryName" class="form-control" placeholder="Enter category name" required>
                    </div>
                    <div class="form-group">
                        <label for="categorySlug">Slug</label>
                        <input type="text" id="categorySlug" class="form-control" placeholder="category-slug" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" id="cancelCategoryBtn">Cancel</button>
                <button class="btn btn-primary" id="saveCategoryBtn">Save Category</button>
            </div>
        </div>
    </div>

    <!-- Add/Edit Tag Modal -->
    <div class="modal" id="tagModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="tagModalTitle">Add New Tag</h3>
                <button class="modal-close">&times;</button>
            </div>
            <div class="modal-body">
                <form id="tagForm">
                    <input type="hidden" id="tagId">
                    <div class="form-group">
                        <label for="tagName">Name</label>
                        <input type="text" id="tagName" class="form-control" placeholder="Enter tag name" required>
                    </div>
                    <div class="form-group">
                        <label for="tagSlug">Slug</label>
                        <input type="text" id="tagSlug" class="form-control" placeholder="tag-slug" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" id="cancelTagBtn">Cancel</button>
                <button class="btn btn-primary" id="saveTagBtn">Save Tag</button>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal" id="deleteModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="deleteModalTitle">Confirm Delete</h3>
                <button class="modal-close">&times;</button>
            </div>
            <div class="modal-body">
                <p id="deleteModalText">Are you sure you want to delete this item? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" id="cancelDeleteBtn">Cancel</button>
                <button class="btn btn-primary" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>

    <script>
        // Toggle sidebar on mobile
        document.querySelector('.toggle-sidebar').addEventListener('click', function() {
            document.querySelector('.sidebar').classList.toggle('active');
        });

        // Close sidebar when clicking the collapse button
        document.querySelector('.sidebar-collapse').addEventListener('click', function() {
            document.querySelector('.sidebar').classList.remove('active');
        });

        // Modal functionality
        const categoryModal = document.getElementById('categoryModal');
        const tagModal = document.getElementById('tagModal');
        const deleteModal = document.getElementById('deleteModal');
        
        // Category Modal
        const addCategoryBtn = document.getElementById('addCategoryBtn');
        const cancelCategoryBtn = document.getElementById('cancelCategoryBtn');
        const saveCategoryBtn = document.getElementById('saveCategoryBtn');
        const categoryModalTitle = document.getElementById('categoryModalTitle');
        const categoryIdInput = document.getElementById('categoryId');
        const categoryNameInput = document.getElementById('categoryName');
        const categorySlugInput = document.getElementById('categorySlug');

        // Tag Modal
        const addTagBtn = document.getElementById('addTagBtn');
        const cancelTagBtn = document.getElementById('cancelTagBtn');
        const saveTagBtn = document.getElementById('saveTagBtn');
        const tagModalTitle = document.getElementById('tagModalTitle');
        const tagIdInput = document.getElementById('tagId');
        const tagNameInput = document.getElementById('tagName');
        const tagSlugInput = document.getElementById('tagSlug');

        // Delete Modal
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const deleteModalTitle = document.getElementById('deleteModalTitle');
        const deleteModalText = document.getElementById('deleteModalText');

        // Open modals
        function openModal(modal) {
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        // Close modals
        function closeModal(modal) {
            modal.classList.remove('active');
            document.body.style.overflow = 'auto';
        }

        // Close modal when clicking outside
        function setupModalCloseOnOutsideClick(modal) {
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeModal(modal);
                }
            });
        }

        setupModalCloseOnOutsideClick(categoryModal);
        setupModalCloseOnOutsideClick(tagModal);
        setupModalCloseOnOutsideClick(deleteModal);

        // Category Modal Functions
        addCategoryBtn.addEventListener('click', function() {
            categoryModalTitle.textContent = 'Add New Category';
            categoryIdInput.value = '';
            categoryNameInput.value = '';
            categorySlugInput.value = '';
            openModal(categoryModal);
        });

        // Edit Category buttons
      document.addEventListener('click', function(e) {
    const editCatBtn = e.target.closest('.edit-category');
    if (editCatBtn) {
        const id = editCatBtn.getAttribute('data-id');
        const row = editCatBtn.closest('tr');
        const name = row.cells[0].textContent;
        const slug = row.cells[1].textContent;

        categoryModalTitle.textContent = 'Edit Category';
        categoryIdInput.value = id;
        categoryNameInput.value = name;
        categorySlugInput.value = slug;

        openModal(categoryModal);
    }

    const editTagBtn = e.target.closest('.edit-tag');
    if (editTagBtn) {
        const id = editTagBtn.getAttribute('data-id');
        const row = editTagBtn.closest('tr');
        const name = row.cells[0].textContent;
        const slug = row.cells[1].textContent;

        tagModalTitle.textContent = 'Edit Tag';
        tagIdInput.value = id;
        tagNameInput.value = name;
        tagSlugInput.value = slug;

        openModal(tagModal);
    }
});
        cancelCategoryBtn.addEventListener('click', function() {
            closeModal(categoryModal);
        });

       saveCategoryBtn.addEventListener('click', function() {
    const id = categoryIdInput.value;
    const name = categoryNameInput.value.trim();
    const slug = categorySlugInput.value.trim();

    if (name && slug) {
        const payload = { name, slug };
        let url = '/categories';
        let method = 'POST';

        if (id) {
            url = `/categories/${id}`;
            method = 'PATCH';
        }

        fetch(url, {
            method: method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        })
        .then(res => res.json())
        .then(data => {
            if (data.message) showToast(data.message);
            closeModal(categoryModal);
            location.reload(); 
        })
        .catch(() => showToast('Error saving category'));
    } else {
        showToast('Please fill in all fields');
    }
});

        // Auto-generate slug from name for categories
        categoryNameInput.addEventListener('input', function() {
            const name = this.value;
            const slug = name.toLowerCase()
                .replace(/[^\w\s]/g, '') // Remove special chars
                .replace(/\s+/g, '-')     // Replace spaces with -
                .replace(/-+/g, '-');     // Replace multiple - with single -
            categorySlugInput.value = slug;
        });

        // Tag Modal Functions
        addTagBtn.addEventListener('click', function() {
            tagModalTitle.textContent = 'Add New Tag';
            tagIdInput.value = '';
            tagNameInput.value = '';
            tagSlugInput.value = '';
            openModal(tagModal);
        });

        // Edit Tag buttons
        document.querySelectorAll('.edit-tag').forEach(btn => {
            btn.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const row = this.closest('tr');
                const name = row.cells[0].textContent;
                const slug = row.cells[1].textContent;
                
                tagModalTitle.textContent = 'Edit Tag';
                tagIdInput.value = id;
                tagNameInput.value = name;
                tagSlugInput.value = slug;
                
                openModal(tagModal);
            });
        });

        cancelTagBtn.addEventListener('click', function() {
            closeModal(tagModal);
        });

    saveTagBtn.addEventListener('click', function() {
    const id = tagIdInput.value;
    const name = tagNameInput.value.trim();
    const slug = tagSlugInput.value.trim();

    if (name && slug) {
        const payload = { name, slug };
        let url = '/tags';
        let method = 'POST';

        if (id) {
            url = `/tags/${id}`;
            method = 'PATCH';
        }

        fetch(url, {
            method: method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        })
        .then(res => res.json())
        .then(data => {
            if (data.message) showToast(data.message);
            closeModal(tagModal);
            location.reload(); 
        })
        .catch(() => showToast('Error saving tag'));
    } else {
        showToast('Please fill in all fields');
    }
});

        // Auto-generate slug from name for tags
        tagNameInput.addEventListener('input', function() {
            const name = this.value;
            const slug = name.toLowerCase()
                .replace(/[^\w\s]/g, '') // Remove special chars
                .replace(/\s+/g, '-')     // Replace spaces with -
                .replace(/-+/g, '-');     // Replace multiple - with single -
            tagSlugInput.value = slug;
        });

        // Delete Modal Functions
        let currentDeleteType = ''; // 'category' or 'tag'
        let currentDeleteId = '';

        // Delete Category buttons

        // Delete Tag buttons
   

        cancelDeleteBtn.addEventListener('click', function() {
            closeModal(deleteModal);
        });

        confirmDeleteBtn.addEventListener('click', function() {
            // In a real app, you would make an AJAX request here
            alert(`${currentDeleteType} with ID ${currentDeleteId} deleted successfully!`);
            closeModal(deleteModal);
        });

        // Responsive sidebar behavior
        function handleSidebar() {
            const sidebar = document.querySelector('.sidebar');
            const screenWidth = window.innerWidth;
            
            if (screenWidth <= 768) {
                sidebar.classList.remove('active');
            } else {
                sidebar.classList.add('active');
            }
        }

        // Run on load and resize
        window.addEventListener('load', handleSidebar);
        window.addEventListener('resize', handleSidebar);
    </script>

    <script>
document.addEventListener('DOMContentLoaded', function() {
   
    fetch('/categories')
    .then(res => res.json())
    .then(categories => {
        const categoriesTbody = document.querySelector('.categories-tbody');
        if (!categoriesTbody) return;
        categoriesTbody.innerHTML = '';
        categories.forEach(cat => {
            categoriesTbody.innerHTML += `
                <tr>
                    <td>${cat.name}</td>
                    <td>${cat.slug}</td>
                    <td>${cat.post_count || 0}</td>
                    <td>
                        <button class="action-btn edit-category" data-id="${cat.id}" title="Edit">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="action-btn delete delete-category" data-id="${cat.id}" title="Delete">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
        });
    });

fetch('/tags')
    .then(res => res.json())
    .then(tags => {
        const tagsTbody = document.querySelector('.tags-tbody');
        if (!tagsTbody) return;
        tagsTbody.innerHTML = '';
        tags.forEach(tag => {
            tagsTbody.innerHTML += `
                <tr>
                    <td>${tag.name}</td>
                    <td>${tag.slug}</td>
                    <td>${tag.post_count || 0}</td>
                    <td>
                        <button class="action-btn edit-tag" data-id="${tag.tag_id}" title="Edit">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="action-btn delete delete-tag" data-id="${tag.tag_id}" title="Delete">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
        });
    });

    
    document.addEventListener('click', function(e) {
        if (e.target.closest('.delete-category')) {
            const id = e.target.closest('.delete-category').getAttribute('data-id');
            if (confirm('Are you sure you want to delete this category?')) {
                fetch(`/categories/${id}`, { method: 'DELETE' })
                    .then(res => res.json())
                    .then(data => {
                        showToast(data.message);
                        location.reload();
                    });
            }
        }
        if (e.target.closest('.delete-tag')) {
            const id = e.target.closest('.delete-tag').getAttribute('data-id');
            if (confirm('Are you sure you want to delete this tag?')) {
                fetch(`/tags/${id}`, { method: 'DELETE' })
                    .then(res => res.json())
                    .then(data => {
                        showToast(data.message);
                        location.reload();
                    });
            }
        }
    });
});
</script>

    
  <script>
function showToast(message, type = "success") {
  const toast = document.createElement("div");
  toast.className = `toast-custom ${type}`;
  
  toast.innerHTML = `
    <div class="toast-custom-body">${message}</div>
    <button class="toast-custom-close" aria-label="Close">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </button>
  `;

  document.body.appendChild(toast);

  setTimeout(() => {
    toast.style.animation = "slideIn 0.3s forwards";
  }, 10);

  
  const removeToast = () => {
    toast.classList.add('hide');
    setTimeout(() => toast.remove(), 300);
  };

  
  const timeoutId = setTimeout(removeToast, 3500);


  toast.querySelector('.toast-custom-close').onclick = () => {
    clearTimeout(timeoutId);
    removeToast();
  };
}
</script>
</body>
</html>